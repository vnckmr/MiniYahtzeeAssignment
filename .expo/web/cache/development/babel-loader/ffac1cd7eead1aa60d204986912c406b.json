{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport computeProps from \"../Utils/computeProps\";\nimport Col from \"./Col\";\nimport Row from \"./Row\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar GridNB = function (_Component) {\n  _inherits(GridNB, _Component);\n\n  var _super = _createSuper(GridNB);\n\n  function GridNB() {\n    _classCallCheck(this, GridNB);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GridNB, [{\n    key: \"prepareRootProps\",\n    value: function prepareRootProps() {\n      var type = {\n        flex: 1,\n        flexDirection: this.ifRow() ? 'column' : 'row'\n      };\n      var defaultProps = {\n        style: type\n      };\n      return computeProps(this.props, defaultProps);\n    }\n  }, {\n    key: \"ifRow\",\n    value: function ifRow() {\n      var row = false;\n      React.Children.forEach(this.props.children, function (child) {\n        if (child && child.type == Row) row = true;\n      });\n      return row;\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      if (this.props.onPress) {\n        return _jsx(TouchableOpacity, {\n          onPress: this.props.onPress,\n          children: _jsx(View, _objectSpread(_objectSpread(_objectSpread({\n            ref: function ref(component) {\n              return _this._root = component;\n            }\n          }, this.props), this.prepareRootProps()), {}, {\n            children: this.props.children\n          }))\n        });\n      } else {\n        return _jsx(View, _objectSpread(_objectSpread(_objectSpread({\n          ref: function ref(component) {\n            return _this._root = component;\n          }\n        }, this.props), this.prepareRootProps()), {}, {\n          children: this.props.children\n        }));\n      }\n    }\n  }]);\n\n  return GridNB;\n}(Component);\n\nexport { GridNB as default };","map":{"version":3,"sources":["/Users/vivien/Documents/MiniYahtzeeAssignment/node_modules/react-native-easy-grid/Components/Grid.js"],"names":["React","Component","computeProps","Col","Row","GridNB","type","flex","flexDirection","ifRow","defaultProps","style","props","row","Children","forEach","children","child","nativeProps","_root","setNativeProps","onPress","component","prepareRootProps"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAEA,OAAOC,YAAP;AACA,OAAOC,GAAP;AACA,OAAOC,GAAP;;;IAGqBC,M;;;;;;;;;;;;;WACjB,4BAAmB;AAEf,UAAIC,IAAI,GAAG;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,aAAa,EAAE,KAAKC,KAAL,KAAe,QAAf,GAA0B;AAFlC,OAAX;AAKA,UAAIC,YAAY,GAAG;AACfC,QAAAA,KAAK,EAAEL;AADQ,OAAnB;AAIA,aAAOJ,YAAY,CAAC,KAAKU,KAAN,EAAaF,YAAb,CAAnB;AAEH;;;WAED,iBAAQ;AACJ,UAAIG,GAAG,GAAG,KAAV;AACAb,MAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,CAAuB,KAAKH,KAAL,CAAWI,QAAlC,EAA4C,UAAUC,KAAV,EAAiB;AACzD,YAAGA,KAAK,IAAIA,KAAK,CAACX,IAAN,IAAcF,GAA1B,EACIS,GAAG,GAAG,IAAN;AACP,OAHD;AAIA,aAAOA,GAAP;AACH;;;WAED,wBAAeK,WAAf,EAA4B;AAC1B,WAAKC,KAAL,CAAWC,cAAX,CAA0BF,WAA1B;AACD;;;WAEH,kBAAS;AAAA;;AACP,UAAG,KAAKN,KAAL,CAAWS,OAAd,EAAsB;AACpB,eACE,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWS,OAAtC;AAAA,oBACJ,KAAC,IAAD;AACE,YAAA,GAAG,EAAE,aAAAC,SAAS;AAAA,qBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADhB,aAEM,KAAKV,KAFX,GAGM,KAAKW,gBAAL,EAHN;AAAA,sBAIE,KAAKX,KAAL,CAAWI;AAJb;AADI,UADF;AASD,OAVD,MAWI;AACF,eACE,KAAC,IAAD;AACF,UAAA,GAAG,EAAE,aAAAM,SAAS;AAAA,mBAAI,KAAI,CAACH,KAAL,GAAaG,SAAjB;AAAA;AADZ,WAEE,KAAKV,KAFP,GAGE,KAAKW,gBAAL,EAHF;AAAA,oBAIF,KAAKX,KAAL,CAAWI;AAJT,WADF;AAOD;AACF;;;;EAlDiCf,S;;SAAfI,M","sourcesContent":["'use strict';\n\nimport React, {Component} from 'react';\nimport {View, TouchableOpacity} from 'react-native';\nimport computeProps from '../Utils/computeProps';\nimport Col from './Col';\nimport Row from './Row';\n\n\nexport default class GridNB extends Component {\n    prepareRootProps() {\n\n        var type = {\n            flex: 1,\n            flexDirection: this.ifRow() ? 'column' : 'row'\n        }\n\n        var defaultProps = {\n            style: type\n        }\n\n        return computeProps(this.props, defaultProps);\n\n    }\n\n    ifRow() {\n        var row = false;\n        React.Children.forEach(this.props.children, function (child) {\n            if(child && child.type == Row)\n                row = true;\n        })\n        return row;\n    }\n\n    setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n\n  render() {\n    if(this.props.onPress){\n      return(\n        <TouchableOpacity onPress={this.props.onPress}>\n    <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n      </TouchableOpacity>\n    );\n    }\n    else{\n      return(\n        <View\n      ref={component => this._root = component}\n      {...this.props}\n      {...this.prepareRootProps()}\n    >{this.props.children}</View>\n    );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}